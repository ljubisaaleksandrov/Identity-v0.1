@using AjdemeSi.Domain.Models.Identity;
@model IdentityUserViewModel

@{
    ViewData["Title"] = "Details";
}

<h2>Details</h2>

<div>
    <h4>Contact</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Email)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Email)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.UserName)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.UserName)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.PhoneNumber)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.PhoneNumber)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.EmailConfirmed)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.EmailConfirmed)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.LockoutEnabled)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.LockoutEnabled)
        </dd>
    </dl>
</div>

<div>
@* Uncomment to perform authorization check. A real app would hide the edit link from users
        uses who don't have edit access. A user without edit access can click the link but will get denied 
        access in the controller.  
    @if(await AuthorizationService.AuthorizeAsync(User, Model, ContactOperations.Update))
    {
*@
        <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> <text>|</text>
@*
    }
*@
    <a asp-action="Index">Back to List</a>
</div>
