@using PagedList
@using PagedList.Mvc
@using AjdemeSi.Domain.Models.Identity;
@model IdentityUserPagedListViewModel

@{
    <div class="row">
        <div class="col-sm-12">
            <table width="100%" class="table table-striped table-hover dataTable no-footer dtr-inline" id="dataTables-example" role="grid" aria-describedby="dataTables-example_info" style="width: 100%;">
                <thead>
                    <tr role="row">
                        <th class="filters-sort sorting" data-filter-name="username">User Name</th>
                        <th class="filters-sort sorting" data-filter-name="email">Email</th>
                        <th class="filters-sort sorting" data-filter-name="email">Role</th>
                        <th class="filters-sort sorting_desc" data-filter-name="registrationDate">Registration Date</th>
                        <th class="filters-sort sorting" data-filter-name="isConfirmed">Confirmed</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody class="table-data">
                    @{
                        int i = 0;
                        foreach (var user in Model.ListEntries)
                        {
                            <tr class="gradeA @(i % 2 == 0 ? "even" : "odd")" role="row" >
                                <td class="sorting_1">
                                    @Html.DisplayFor(modelItem => user.UserName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => user.Email)
                                </td>
                                <td>
                                    @{
                                        if (user.UserRoles.Contains("Admin"))
                                        {
                                            @Html.Raw("Administrator");
                                        }
                                        else if (user.UserRoles.Contains("Driver"))
                                        {
                                            @Html.Raw("Driver");
                                        }
                                        else if (user.UserRoles.Contains("User"))
                                        {
                                            @Html.Raw("User");
                                        }
                                    }
                                </td>
                                <td class="center">
                                    @Html.DisplayFor(modelItem => user.DateCreated)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => user.EmailConfirmed)
                                </td>
                                <td class="table-buttons-bar">
                                    <span class="glyphicon glyphicon-pencil color-primary table-button"></span>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
    <input type="hidden" id="postbackDateFrom" value="@Model.DateFrom.ToString("MM/dd/yyyy")" />
    <input type="hidden" id="postbackDateTo" value="@Model.DateTo.ToString("MM/dd/yyyy")" />

    <p>Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount (@Model.TotalItemCount)</p>

    @Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page }))

}
